@using Orchard.Users.Models
@Html.AntiForgeryTokenOrchard()

<h1>@Model.MemberType</h1>
<table class="items" >
    <colgroup>
        <col id="Col1" />
        <col id="Col2" />
        <col id="Col3" />
        <col id="Col4" />
        <col id="Col5" />
        <col id="Col6" />
    </colgroup>
    <thead>
        <tr>
            <th scope="col">@T("Last name")</th>
            <th scope="col">@T("First name")</th>
            <th scope="col">@T("Email")</th>
            <th scope="col">@T("Joined")</th>
            <th scope="col">@T("Balance")</th>
            <th scope="col">@T("Turnover")</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    </thead>
    @foreach (var member in Model.Members)
    {
        var emailTitle = "Verified";
        var emailVerified = true;
        if (member.EmailStatus.Equals(UserStatus.Pending)) {
            emailVerified = false;
            emailTitle = "Email address un-verified";
        }
    <tr>
        <td>@member.LastName</td>
        <td>@member.FirstName</td>
        <td>
            <a href='@string.Format("mailto:{0}", member.Email)' class='@string.Format("email-verified-{0}", emailVerified)' title='@emailTitle'>@member.Email</a>
        </td>
        <td>@member.JoinDate.ToShortDateString()</td>
        <td>@member.Balance</td>
        <td>@member.Turnover</td>
        <td>
            <div>
                <a href="@Url.Action("Edit", "Admin", new { area = "Orchard.Users", id = member.Id })" title="@T("Edit")">@T("Edit")</a> | 
                <a href="@Url.Action("List", "TransactionsAdmin", new { area = "LETS", id = member.Id })" title="@T("Transactions")">@T("Transactions")</a> |
                <a href="@Url.Action("List", "NoticesAdmin", new { area = "LETS", id = member.Id })" title="@T("Notices")">@T("Notices")</a>
            </div>
        </td>
        <td>
            @if (Model.MemberType.Equals("Members")) {
                @Html.ActionLink("Disable", "Disable", new {area = "LETS", Controller = "MemberAdmin", id = member.Id}, new {@class = "edit", itemprop = "UnsafeUrl RemoveUrl", data_message = "Are you sure? This will permanently delete all the member's notices.  Disabling a member means you can re-enable them later."})
            }
            @if (Model.MemberType.Equals("Disabled Members") ) {
                @(emailVerified 
                ? Html.ActionLink("Enable", "Enable", new {area = "LETS", Controller = "MemberAdmin", id = member.Id}, new {@class = "edit", itemprop = "UnsafeUrl", data_message = "Are you sure you want to approve/enable this member?"}) 
                : Html.ActionLink("Send verification email", "SendVerificationEmail", new {area = "LETS", Controller = "MemberAdmin", id = member.Id}, new {@class = "edit", itemprop = "UnsafeUrl", data_message = "Are you sure?  The member was already sent an email when they signed up.  Send another one if they've lost it."}))
            }
            @if (Model.MemberType.Equals("Members") || Model.MemberType.Equals("Disabled Members")) {
                @: |
                @Html.ActionLink("Delete", "Delete", new {area = "LETS", Controller = "MemberAdmin", id = member.Id}, new {@class = "edit", itemprop = "UnsafeUrl RemoveUrl", data_message = "Are you sure? This is permanent."})
            }
        </td>
    </tr>
    } 
</table>
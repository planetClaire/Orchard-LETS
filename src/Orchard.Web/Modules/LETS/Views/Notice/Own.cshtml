@using LETS.Helpers;

@model LETS.ViewModels.MemberNoticesViewModel
<div class="own-notices">
    <h1>My notices</h1>
    @if (Model.Notices.Count().Equals(0))
    {
        <p>
            @T("You don't have any active notices")
            <br />
            @Html.ActionLink(T("Add a notice").ToString(), "Create", new { area = "LETS", controller = "Notice" })
        </p>
    }
    @foreach (var notice in Model.Notices)
    {
        var id = notice.ContentItem.Id;
        var published = Helpers.IsPublished(notice.ContentItem);
        <div class="own-notice card mt-3 mb-3">
            <div class="card-body">
                @Display(notice)
            </div>
            <div class="card-footer">
                @Html.ActionLink(T("Edit").ToString(), "Edit", "Notice", new { area = "LETS", id = id }, new { @class = "edit" }) |
                @Html.ActionLink(T("Delete").ToString(), "Delete", "Notice", new { area = "LETS", id = id }, new { @class = "edit", itemprop = "UnsafeUrl RemoveUrl" }) |
                @if (published)
                {
                    @Html.Link(T("Archive").Text, Url.Action("Unpublish", "Notice", new { area = "LETS", id = id }), new { @class = "edit", itemprop = "UnsafeUrl ArchiveUrl" })
                }
                else
                {
                    @Html.ActionLink(T("Publish").ToString(), "Publish", "Notice", new { area = "LETS", id = id }, new { @class = "edit", itemprop = "UnsafeUrl" })
                }
            </div>
        </div>
    }
    <div id="archivedNotices">
        <h2>@T("Archived notices")</h2>
        <p><strong>@T("Expired notices will show up here until they are deleted or re-activated by publishing them.")</strong></p>
        <p>@T("Notices can also be archived if you don't want to delete them yet")</p>
        @if (Model.ArchivedNotices.Any())
        {
            foreach (var archivedNotice in Model.ArchivedNotices)
            {
                var id = archivedNotice.ContentItem.Id;
                var published = Helpers.IsPublished(archivedNotice.ContentItem);
                <div class="own-notice card mt-3 mb-3 bg-light">
                    <div class="card-body">
                        @Display(archivedNotice)
                    </div>
                    <div class="card-footer">
                        @Html.ActionLink(T("Edit").ToString(), "Edit", "Notice", new { area = "LETS", id = id }, new { @class = "edit" }) |
                        @Html.ActionLink(T("Delete").ToString(), "Delete", "Notice", new { area = "LETS", id = id }, new { @class = "edit", itemprop = "UnsafeUrl RemoveUrl" }) |
                        @if (published)
                        {
                            @Html.Link(T("Archive").Text, Url.Action("Unpublish", "Notice", new { area = "LETS", id = id }), new { @class = "edit", itemprop = "UnsafeUrl ArchiveUrl" })
                        }
                        else
                        {
                            @Html.ActionLink(T("Publish").ToString(), "Publish", "Notice", new { area = "LETS", id = id }, new { @class = "edit", itemprop = "UnsafeUrl" })
                        }
                        }
                    </div>
                </div>
            }
        }

        @Html.AntiForgeryTokenOrchard()
    </div>
</div>
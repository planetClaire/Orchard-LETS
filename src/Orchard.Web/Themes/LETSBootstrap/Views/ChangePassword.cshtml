@using LETS.Helpers
@model dynamic
@{
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
}
<h1>
    @Html.TitleForPage(T("Change Password").ToString())
</h1>
<p>@T("Use the form below to change your password.")</p>
<p>
    @T("New passwords are required to be a minimum of {0} characters in length.", ViewData["PasswordLength"])
</p>
@Html.ValidationSummary(T("Password change was unsuccessful. Please correct the errors and try again.").ToString())

@using (Html.BeginFormAntiForgeryPost(new { @class = "needs-validation", novalidate = "novalidate" }))
{
    <div class="row ">
        <fieldset class="col-4 m-auto text-center">
            <legend>@T("Account Information")</legend>
            <div class="form-group">
                @Html.Password("currentPassword", "", new { @class = "form-control required input-xlarge", required = "required", @type = "password", placeholder="Current password" })
                @Html.ValidationMessage("currentPassword")
            </div>
            <div class="form-group">
                @Html.Password("newPassword", "", new { @class = "form-control required input-xlarge", required = "required", @type = "password", placeholder="New password" })
                <div class="invalid-feedback">
                    @Html.ValidationMessage("newPassword")
                </div>
            </div>
            <div class="form-group">
                @Html.Password("confirmPassword", "", new { @class = "form-control required input-xlarge", required = "required", @type = "password", placeholder = "Confirm password" })
                <div class="invalid-feedback">
                    @Html.ValidationMessage("confirmPassword")
                </div>
            </div>
            <div class="form-actions">
                <button class="btn btn-primary btn-large" type="submit">@T("Change Password")</button>
            </div>
        </fieldset>
    </div>
}

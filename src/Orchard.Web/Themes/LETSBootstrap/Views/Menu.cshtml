@{
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;

    // Model is Model.Menu from the layout (Layout.Menu)
    Model.Classes.Add("navbar-nav justify-content-end");
    var tag = Tag(Model, "ul");
    var items = (IList<dynamic>)Enumerable.Cast<dynamic>(Model.Items);
    var user = WorkContext.CurrentUser;
}
@tag.StartElement
@* see MenuItem shape template *@
@DisplayChildren(Model)
@if (user == null)
{
<li class="nav-item ml-lg-auto dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="loginDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Login
    </a>
    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="loginDropdown">
        @using (Html.BeginFormAntiForgeryPost(Url.Action("LogOnMember", "Account", new { area = "LETS", ReturnUrl = Request.QueryString["ReturnUrl"] }), FormMethod.Post, new { @class = "px-4 py-3 needs-validation", novalidate = "novalidate" }))
        {
            <div class="form-group">
                @Html.TextBox("userNameOrEmail", "", new { id = "username-email", @class = "form-control", placeholder = "Your email", @type = "email", required = "required" })
            </div>
            <div class="form-group">
                @Html.Password("password", "", new { @class = "form-control", placeholder = "Password", required = "required" })
            </div>
            <div class="form-group">
                <div class="form-check">
                    @Html.CheckBox("createPersistentCookie", new { @class = "form-check-input" })
                    <label class="form-check-label" for="createPersistentCookie">
                        Remember me
                    </label>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Login</button>
        }
        <div class="dropdown-divider"></div>
        @Html.ActionLink(T("Lost your Password?").Text, "RequestLostPasswordMember", "Account", new { area = "LETS" }, new { @class = "dropdown-item" })
    </div>
</li>
}
else
{
    <li class="nav-item ml-lg-auto"></li>
}
@tag.EndElement

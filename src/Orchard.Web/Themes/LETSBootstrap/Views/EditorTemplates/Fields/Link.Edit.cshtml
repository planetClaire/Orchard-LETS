@model Orchard.Fields.Fields.LinkField
@using Orchard.Fields.Settings;
@{
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true; 
}
@{
    var settings = Model.PartFieldDefinition.Settings.GetModel<LinkFieldSettings>();
    string target = string.Empty;
    switch (settings.TargetMode) {
        case TargetMode.NewWindow:
            target = "_blank";
            break;
        case TargetMode.Parent:
            target = "_parent";
            break;
        case TargetMode.Top:
            target = "_top";
            break;
	}
}
<div class="form-group">
    <label for="@Html.FieldIdFor(m => m.Value)" class="control-label">@string.Format("{0} {1}", Model.DisplayName, @T("url"))</label>
    <div class="controls">
        @Html.TextBoxFor(m =>   m.Value, new { @class = "input-xlarge" })
        <span class="hint">@T("A valid url, eg: http://yourwebsite.com")</span>
    </div>
</div>

@if (settings.LinkTextMode == LinkTextMode.Optional || settings.LinkTextMode == LinkTextMode.Required) {
    <div class="form-group">
        <label for="@Html.FieldIdFor(m => m.Text)" class="control-label">@string.Format("{0} {1}", Model.DisplayName, @T("link text"))</label>
        <div class="controls">
            @Html.TextBoxFor(m => m.Text, new {@class = "input-xlarge"})
            <span class="hint">@T("The text of the link. If left empty, the url will be used instead.")</span>
        </div>
    </div>
}
    
@if (settings.TargetMode == TargetMode.UserChoice)
{
    <div class="control=group">
        <label for="@Html.FieldIdFor(m => m.Target)" class="control-label">@T("Target")</label>
        <div class="controls">
            @Html.TextBoxFor(m => m.Target, new { @class = "input-xlarge" })
            <span class="hint">@T("A valid HTML target attribute value. e.g., _blank, _parent, _top, or an anchor. ")</span>
        </div>
    </div>
}
else
{
    @Html.Hidden(Html.FieldNameFor(m => m.Target), target)
}
